@model TestSystem.ViewModels.TestAdministration.TestCreateViewModel
@Styles.Render("~/Content/CreateTest.css")
@using (Ajax.BeginForm("CreateTest", "TestAdministration", null, new AjaxOptions
{
    OnSuccess = "onSuccess()",
    UpdateTargetId = "create-new-user-helper",
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST"
}, new { @class = "create-new-test" }))
{
<h1>
    Create Test
    <button onclick="CloseCreateUser()">
        <svg viewBox="0 0 24 24">
            <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
        </svg>
    </button>
</h1>

<div class="input-holder">
    @Html.EditorFor(m => m.TestModel.Name, new { htmlAttributes = new { required = "required"} })
    <span class="input-bar"></span>
    <label>Test Name</label>
</div>
<span class="field-validation-error"><span>Test name can't be empty</span></span>

<div class='question'></div>

<section id="question-creator">

    <div class="input-holder-question">
        <div class="input-holder">
            @Html.EditorFor(m => m.QuestionModel., new { htmlAttributes = new { required = "required" } })
            <span class="input-bar"></span>
            <label>Question</label>
        </div>
    </div>
    <span class="field-validation-error"><span>Question can't be empty</span></span>

    <div class="choice">
        <div class="input-radio-checkbox">
            <input type="radio" name="question-1" id="question-1-choice-1">
            <label class="check" for="question-1-choice-1"></label>
        </div>
        <div class="input-holder">
            @Html.EditorFor(m => m.AnswerModel.Name, new { htmlAttributes = new { required = "required" } })
            <span class="input-bar"></span>
            <label>Choice</label>
        </div>
        <div class="remove-choice">
            <svg viewBox="0 0 24 24">
                <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
            </svg>
        </div>
    </div>
    <span class="field-validation-error"><span>Choice can't be empty</span></span>

    <div class="add-answer">
        <div class="radio-marker"></div>
        <lable>Add choice</lable>
    </div>

    <div class="question-creator-tools">
        <div>
            <svg viewBox="0 0 24 24">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z" />
            </svg>
        </div>
    </div>
</section>

<button>Create</button>
}
<script type="text/javascript">
    /*--------Jquery--------*/

    var currentQuestion = 1;
    var currentChoise = 2;
    /*--------Add choise--------*/
    function AddChoice() {
        $(".field-validation-error:last").after("<div class='choice'>"
            + '<div class="input-radio-checkbox">'
            + '<input type="radio" name="question-' + currentQuestion + '" id="question-' + currentQuestion + '-choice-' + currentChoise + '">'
            + '<label class="check" for="question-' + currentQuestion + '-choice-' + currentChoise + '"></label>'
            + '</div>'
            + '<div class="input-holder">'
            + '@Html.EditorFor(m => m.AnswerModel.Name, new { htmlAttributes = new { required = "required" } })'
            + '<span class="input-bar"></span>'
            + '<label>Choise</label>'
            + '</div>'
            + '<div class="remove-choice">'
            + '<svg viewBox="0 0 24 24">'
            + '<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>'
            + '</svg>'
            + '</div>'
            + '</div>'
            + '<span class="field-validation-error"><span>Choice cant be empty</span></span>');
        currentChoise += 1;
    }

    /*--------When document fully loads--------*/
    $(document).ready(function () {
        /*--------Add choise on clicking add choice--------*/
        $(".add-answer").on("click", function () {
            AddChoice();
        });

        /*--------Remove choice universal--------*/
        $("body").on("click", ".remove-choice", function () {
            if ($(this).parents(".question").length) {
                /*--------Remove choice from question in test--------*/
                if ($(this).closest(".question").children(".choice").length == 1 || $(this).parent(".input-holder-question").length) {
                    // If choice is last one, delete question.
                    $(this).closest(".question").remove();
                }
                else {
                    $(this).parent().remove();
                }
            }
            else {
                /*--------Remove choice question-creator-tools--------*/
                if ($("#question-creator .choice").length == 1) {
                    // If choice is last one, don't delete question.
                    return;
                }
                else {
                    $(this).parent().remove();
                }
            }
        });

        /*--------Add question and choises to test--------*/
        $(".question-creator-tools > div").on("click", function () {
            $("#question-creator .choice").clone().prependTo(".question:last-of-type");
            $("#question-creator > .input-holder-question").clone().prependTo(".question:last-of-type");

            $(".question:last-of-type .input-holder-question .input-holder").after("<div class='remove-choice'><svg viewBox='0 0 24 24'><path d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/></svg></div>");
            $(".question:last-of-type").after("<div class='question'></div>");
            // Clear question-creator-tools.
            $("#question-creator").children(".choice").remove();
            currentQuestion += 1;
            currentChoise = 1;
            AddChoice();
        });
    });

</script>

