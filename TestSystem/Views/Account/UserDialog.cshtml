@model TestSystem.Models.Account.UserModel

@using (Ajax.BeginForm("AddEditRecord", "Account", null, new AjaxOptions
{
    OnSuccess = "onSuccess()",
    UpdateTargetId = "create-new-user-helper",
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST"
}, new { @class = "create-new-user"}))
{
    if (!ViewBag.IsUpdate)
    {
        <h1>Create User
            <button type="button"onclick="CloseCreateUser()">
                <svg viewBox="0 0 24 24">
                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                </svg>
            </button>
        </h1>
    }
    else
    {
        <h1>
            Edit User
            <button type="button" onclick="CloseCreateUser()">
                <svg viewBox="0 0 24 24">
                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                </svg>
            </button>
        </h1>
        @Html.HiddenFor(model => model.UserId)
    }
    <div class="input-holder">
        @Html.EditorFor(m => m.Username, new { htmlAttributes = new { required = "required" } })
        <span class="input-bar"></span>
        <label>Username</label>
    </div>
    @Html.ValidationMessageFor(m => m.Username)

    <div class="input-holder">
        @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { required = "required" } })
        <span class="input-bar"></span>
        <label>FirstName</label>
    </div>
    @Html.ValidationMessageFor(m => m.FirstName)

    <div class="input-holder">
        @Html.EditorFor(m => m.Lastname, new { htmlAttributes = new { required = "required" } })
        <span class="input-bar"></span>
        <label>LastName</label>
    </div>
    @Html.ValidationMessageFor(m => m.Lastname)

    <select id="Role" name="Role">
        <option value="">Role</option>
        <option value="User">User</option>
        <option value="Admin">Admin</option>
    </select>
    @Html.ValidationMessageFor(m => m.Role)

    <div class="input-holder">
        @Html.EditorFor(m => m.Position, new { htmlAttributes = new { required = "required" } })
        <span class="input-bar"></span>
        <label>Position</label>
    </div>
    @Html.ValidationMessageFor(m => m.Position)

    <div class="input-holder">
        @Html.EditorFor(m => m.Group, new { htmlAttributes = new { required = "required" } })
        <span class="input-bar"></span>
        <label>Group</label>
    </div>
    @Html.ValidationMessageFor(m => m.Group)

    <div class="input-holder">
        @Html.PasswordFor(m => m.Password, new { required = "required" })
        <span class="input-bar"></span>
        <label>Password</label>
    </div>
    @Html.ValidationMessageFor(m => m.Password)

    <div class="input-holder">
        @Html.PasswordFor(m => m.RepeatPassword, new { required = "required" })
        <span class="input-bar"></span>
        <label>Repeat Password</label>
    </div>
    @Html.ValidationMessageFor(m => m.RepeatPassword)

    if (!ViewBag.IsUpdate)
    {
        <button type="submit" value="Save" name="cmd">register</button>
    }
    else
    {
        <button type="submit" value="Update" name="cmd">edit</button>
    }

}
@Scripts.Render("~/bundles/jquery")


   

